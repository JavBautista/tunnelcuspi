=====================================================================
GUÍA COMPLETA PARA INSERTAR COTIZACIÓN EN BD SICAR
=====================================================================

IMPORTANTE: Esta BD no es nuestra, solo consultamos/insertamos datos.
NO crear registros en tablas de referencia (cliente, usuario, etc.)

=====================================================================
1. ESTRUCTURA TABLA PRINCIPAL: cotizacion
=====================================================================

CAMPOS OBLIGATORIOS:
-------------------
cot_id          bigint AUTO_INCREMENT (PK) - Se genera automático
fecha           date NOT NULL - Fecha de la cotización
header          text NOT NULL - Encabezado/texto superior  
footer          text NOT NULL - Pie de página/texto inferior
total           decimal(20,2) NOT NULL - Total de la cotización
monAbr          varchar(5) NOT NULL DEFAULT '' - Abreviatura moneda
monTipoCambio   decimal(20,6) NOT NULL DEFAULT 1.000000 - Tipo cambio
status          int NOT NULL - Estado (1=activo, 0=inactivo)
img             tinyint(1) NOT NULL - Mostrar imagen (0/1)
caracteristicas tinyint(1) NOT NULL - Mostrar características (0/1)
desglosado      tinyint(1) NOT NULL - Mostrar desglosado (0/1)
cli_id          int NOT NULL (FK) - ID del cliente
usu_id          int NOT NULL (FK) - ID del usuario
mon_id          int NOT NULL DEFAULT 1 (FK) - ID de la moneda

CAMPOS OPCIONALES:
-----------------
subtotal        decimal(20,2) - Subtotal sin impuestos
descuento       decimal(20,2) - Descuento aplicado
monSubtotal     decimal(20,2) - Subtotal en moneda extranjera
monDescuento    decimal(20,2) - Descuento en moneda extranjera
monTotal        decimal(20,2) - Total en moneda extranjera
peso            decimal(20,4) - Peso total
mosDescuento    tinyint(1) DEFAULT 0 - Mostrar descuento
mosPeso         tinyint(1) DEFAULT 0 - Mostrar peso
impuestos       tinyint(1) DEFAULT 0 - Aplicar impuestos
mosFirma        tinyint(1) DEFAULT 1 - Mostrar firma
leyendaImpuestos tinyint(1) DEFAULT 1 - Mostrar leyenda impuestos
mosParidad      tinyint(1) DEFAULT 0 - Mostrar paridad
bloqueada       tinyint(1) DEFAULT 0 - Cotización bloqueada
mosDetallePaq   tinyint(1) DEFAULT 0 - Mostrar detalle paquete
mosClaveArt     tinyint(1) DEFAULT 1 - Mostrar clave artículo
folioMovil      bigint - Folio móvil
serieMovil      varchar(5) - Serie móvil
totalSipa       decimal(20,2) - Total SIPA
mosPreAntDesc   tinyint(1) DEFAULT 0 - Mostrar precio antes descuento
vnd_id          int (FK) - ID del vendedor (OPCIONAL)

=====================================================================
2. LLAVES FORÁNEAS (TABLAS DE REFERENCIA)
=====================================================================

TABLA: cliente
--------------
- cli_id (PK) - OBLIGATORIO
- Clientes activos disponibles: 34,929
- Validar que status = 1
- Campos principales: nombre, rfc, telefono, mail

TABLA: usuario  
--------------
- usu_id (PK) - OBLIGATORIO
- Usuarios activos disponibles: 20
- Validar que status = 1
- Campos: nombre, usuario, status

TABLA: moneda
-------------
- mon_id (PK) - OBLIGATORIO (default: 1)
- Monedas disponibles:
  * mon_id=1: PESO MEXICANO (MXN) - tipoCambio: 1.000000
  * mon_id=2: DÓLAR ESTADOUNIDENSE (USD) - tipoCambio: 20.196300
  * mon_id=3: EURO (EUR) - tipoCambio: 21.358700
  * mon_id=4: DÓLAR CANADIENSE (CAD) - tipoCambio: 15.627000

TABLA: vendedor
---------------
- vnd_id (PK) - OPCIONAL
- Vendedores activos disponibles: 18
- Validar que status = 1
- Campos: nombre, alias, comision

=====================================================================
3. TABLAS DEPENDIENTES (INSERTAR DESPUÉS DE COTIZACIÓN)
=====================================================================

TABLA: detallecot (DETALLES DE ARTÍCULOS)
-----------------------------------------
Llaves: (cot_id, art_id) - Compuesta
Campos obligatorios:
- cot_id: bigint (FK a cotizacion)
- art_id: int (FK a articulo)
- clave: varchar(45)
- descripcion: varchar(1000)
- cantidad: decimal(20,3)
- unidad: varchar(5)
- precioCompra: decimal(20,2)
- precioCon: decimal(20,2)
- importeCompra: decimal(20,2)
- importeCon: decimal(20,2)
- diferencia: decimal(20,2)
- utilidad: decimal(20,6)
- descPorcentaje: decimal(20,2) DEFAULT 0.00
- descTotal: decimal(20,2) DEFAULT 0.00
- orden: int

TABLA: cotizacionimp (IMPUESTOS)
-------------------------------
Llaves: (cot_id, imp_id) - Compuesta
Campos obligatorios:
- cot_id: bigint (FK a cotizacion)
- imp_id: int (FK a impuesto)
- total: decimal(20,2)
- subtotal: decimal(20,2)
- tras: tinyint(1)
- orden: int

TABLA: detallecotpre (PRE-ARTÍCULOS)
-----------------------------------
Similar a detallecot pero con par_id en lugar de art_id

=====================================================================
4. SECUENCIA DE INSERCIÓN COMPLETA
=====================================================================

PASO 1: VALIDAR DATOS DE REFERENCIA
-----------------------------------
-- Verificar que cliente existe y está activo
SELECT cli_id, nombre FROM cliente WHERE cli_id = ? AND status = 1;

-- Verificar que usuario existe y está activo  
SELECT usu_id, nombre FROM usuario WHERE usu_id = ? AND status = 1;

-- Verificar moneda (opcional, default = 1)
SELECT mon_id, moneda, tipoCambio FROM moneda WHERE mon_id = ? AND status = 1;

-- Verificar vendedor (opcional)
SELECT vnd_id, nombre FROM vendedor WHERE vnd_id = ? AND status = 1;

PASO 2: INSERTAR COTIZACIÓN PRINCIPAL
-------------------------------------
INSERT INTO cotizacion (
    fecha,
    header,
    footer,
    total,
    status,
    img,
    caracteristicas,
    desglosado,
    cli_id,
    usu_id,
    mon_id,
    vnd_id,
    subtotal,
    descuento,
    monAbr,
    monTipoCambio
) VALUES (
    '2025-08-16',           -- fecha
    'Encabezado cotización', -- header
    'Pie de página',        -- footer
    1500.00,                -- total
    1,                      -- status (activo)
    0,                      -- img
    0,                      -- caracteristicas
    0,                      -- desglosado
    123,                    -- cli_id (existente)
    5,                      -- usu_id (existente)
    1,                      -- mon_id (MXN)
    NULL,                   -- vnd_id (opcional)
    1300.00,                -- subtotal
    0.00,                   -- descuento
    'MXN',                  -- monAbr
    1.000000                -- monTipoCambio
);

PASO 3: OBTENER ID GENERADO
---------------------------
SET @cot_id = LAST_INSERT_ID();

PASO 4: INSERTAR DETALLES DE ARTÍCULOS
--------------------------------------
INSERT INTO detallecot (
    cot_id,
    art_id,
    clave,
    descripcion,
    cantidad,
    unidad,
    precioCompra,
    precioCon,
    importeCompra,
    importeCon,
    diferencia,
    utilidad,
    orden
) VALUES (
    @cot_id,        -- cot_id generado
    456,            -- art_id (existente en tabla articulo)
    'ART001',       -- clave
    'Producto 1',   -- descripcion
    2.000,          -- cantidad
    'PZA',          -- unidad
    100.00,         -- precioCompra
    150.00,         -- precioCon
    200.00,         -- importeCompra
    300.00,         -- importeCon
    100.00,         -- diferencia
    50.000000,      -- utilidad
    1               -- orden
);

PASO 5: INSERTAR IMPUESTOS (SI APLICA)
--------------------------------------
INSERT INTO cotizacionimp (
    cot_id,
    imp_id,
    total,
    subtotal,
    tras,
    orden
) VALUES (
    @cot_id,    -- cot_id generado
    1,          -- imp_id (existente en tabla impuesto)
    200.00,     -- total del impuesto
    1300.00,    -- subtotal base
    1,          -- tras (traslado)
    1           -- orden
);

=====================================================================
5. EJEMPLO COMPLETO EN PHP/LARAVEL
=====================================================================

<?php
use Illuminate\Support\Facades\DB;

try {
    DB::beginTransaction();
    
    // Validar referencias
    $cliente = DB::table('cliente')
        ->where('cli_id', $clienteId)
        ->where('status', 1)
        ->first();
    
    if (!$cliente) {
        throw new Exception('Cliente no válido');
    }
    
    $usuario = DB::table('usuario')
        ->where('usu_id', $usuarioId)
        ->where('status', 1)
        ->first();
        
    if (!$usuario) {
        throw new Exception('Usuario no válido');
    }
    
    // Insertar cotización
    $cotizacionId = DB::table('cotizacion')->insertGetId([
        'fecha' => date('Y-m-d'),
        'header' => $header,
        'footer' => $footer,
        'total' => $total,
        'status' => 1,
        'img' => 0,
        'caracteristicas' => 0,
        'desglosado' => 0,
        'cli_id' => $clienteId,
        'usu_id' => $usuarioId,
        'mon_id' => $monedaId ?? 1,
        'vnd_id' => $vendedorId,
        'subtotal' => $subtotal,
        'monAbr' => $monedaAbr ?? 'MXN',
        'monTipoCambio' => $tipoCambio ?? 1.000000
    ]);
    
    // Insertar detalles
    foreach ($detalles as $detalle) {
        DB::table('detallecot')->insert([
            'cot_id' => $cotizacionId,
            'art_id' => $detalle['art_id'],
            'clave' => $detalle['clave'],
            'descripcion' => $detalle['descripcion'],
            'cantidad' => $detalle['cantidad'],
            'unidad' => $detalle['unidad'],
            'precioCompra' => $detalle['precioCompra'],
            'precioCon' => $detalle['precioCon'],
            'importeCompra' => $detalle['importeCompra'],
            'importeCon' => $detalle['importeCon'],
            'diferencia' => $detalle['diferencia'],
            'utilidad' => $detalle['utilidad'],
            'orden' => $detalle['orden']
        ]);
    }
    
    DB::commit();
    
    return [
        'ok' => true,
        'cot_id' => $cotizacionId,
        'mensaje' => 'Cotización creada exitosamente'
    ];
    
} catch (Exception $e) {
    DB::rollBack();
    return [
        'ok' => false,
        'mensaje' => 'Error: ' . $e->getMessage()
    ];
}

=====================================================================
6. VALIDACIONES IMPORTANTES
=====================================================================

✅ ANTES DE INSERTAR:
- Cliente existe y está activo (status = 1)
- Usuario existe y está activo (status = 1)  
- Moneda existe y está activa (si se especifica)
- Vendedor existe y está activo (si se especifica)
- Artículos existen en tabla articulo (para detalles)
- Totales calculados correctamente

⚠️ CONSIDERACIONES:
- NO crear registros en tablas de referencia
- Usar transacciones para mantener integridad
- Validar permisos del usuario para crear cotizaciones
- Calcular correctamente subtotales, impuestos y totales
- Mantener consistencia en monedas y tipos de cambio

🔍 CONSULTAS ÚTILES:
-- Ver cotización completa
SELECT c.*, cl.nombre as cliente_nombre, u.nombre as usuario_nombre 
FROM cotizacion c
JOIN cliente cl ON c.cli_id = cl.cli_id
JOIN usuario u ON c.usu_id = u.usu_id  
WHERE c.cot_id = ?;

-- Ver detalles de cotización
SELECT * FROM detallecot WHERE cot_id = ? ORDER BY orden;

-- Ver impuestos de cotización  
SELECT ci.*, i.nombre as impuesto_nombre
FROM cotizacionimp ci
JOIN impuesto i ON ci.imp_id = i.imp_id
WHERE ci.cot_id = ?;

=====================================================================
FIN DEL DOCUMENTO
=====================================================================